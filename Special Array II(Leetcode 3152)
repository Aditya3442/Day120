class Solution {
    private boolean binarySearch(int start,int end,ArrayList<Integer> arr){
        int l = 0;
        int r = arr.size() - 1;
        while (l <= r) {
            int m = l + (r - l) / 2;
            int x = arr.get(m);
            if (x < start) 
                l = m + 1;
            else if (x > end) 
                r = m - 1;
            else 
                return true;
        }
        return false;
    }
    public boolean[] isArraySpecial(int[] nums, int[][] queries) {
        boolean[] arr = new boolean[queries.length];
        ArrayList<Integer> res = new ArrayList<>();
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] % 2 == nums[i - 1] % 2) {
                res.add(i);
            }
        }
        for (int i = 0; i < queries.length; i++) {
            int[] query = queries[i];
            int start = query[0];
            int end = query[1];
            boolean tag = binarySearch(start + 1,end,res);
            if (tag) 
                arr[i] = false;
            else 
                arr[i] = true;
        }

        return arr;
    }
}
